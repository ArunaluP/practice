//window.alert(`You are Hacked`)
//console.log(`Hey leave the page you are now hacked version 1`)

//document.getElementById("firstOne").textContent= "hello world";
//document.getElementById("first").textContent = "This is my first paragraph in javascript course";

// let fullName = "Arunalu Prabhatha";
// let myGpa = 3.009;
// let isStudent = true;

// document.getElementById("num1").textContent = `My name is ${fullName}`;
// document.getElementById(`num2`).textContent = `My GPA is ${myGpa}`;
// document.getElementById(`num3`).textContent = `Is student: ${isStudent}`

// let username;
// username = prompt("Enter your name");

// console.log(`Hello ${username}, welcome to the JavaScript course!`);

// let user;

// document.getElementById("sub").onclick = function() {
//     user = document.getElementById("name").value;
//     document.getElementById("myh1").textContent = `Hello ${user}`;
// }
// let input = window.prompt("Enter your text");
// input = Number(input);
// input = String(input)
// input = Boolean(input);
// console.log(input , typeof input);

// const PI = 3.142857142857143;
// let radius;
// let circumference;
 
// document.getElementById("sub").onclick = function() {
//     radius = document.getElementById("radius").value;
//     circumference = 2 * PI * radius;
//     document.getElementById("myh3").textContent = `Circumference is ${circumference}`;
// }

// let number =0;
// const increment = document.getElementById("inc");
// const reset = document.getElementById("res");   
// const decrement = document.getElementById("dec")

// increment.onclick = function(){
//     number++
//     document.getElementById("state").textContent = number;
    
// }
// reset.onclick = function(){
//     number = 0;
//     document.getElementById("state").textContent = number;
// }
// decrement.onclick = function(){
//     number--
//     document.getElementById("state").textContent = number;
// }
//  let x= 3.5;
//  let y = 2;
//  let z = 1;

// let result;
// result = Math.round(x); // 4
// result = Math.floor(3.7);
// result = Math.ceil(3.3)
// result = Math.pow(5,3)
// result = Math.sqrt(25);
// result  =  Math.sin(90 * Math.PI / 180);
// result  =  Math.cos(60 * Math.PI / 180);
// result  =  Math.tan(45 * Math.PI / 180);
//  result = Math.max(x,y,z);
// result = Math.sign(0.5)
// result = Math.abs(-5.5);
// result = Math.log(8)
// result = Math.trunc(3.3)
// result = Math.max(3, 5, 7, 2, 8);
// result = Math.min(3, 5, 7, 2, 8);
// console.log(result);
// let min = 1;
// let max = 6;
// let value;
// document.getElementById("dice").onclick = function (){
//     value = Math.ceil(Math.random()*(max -min) + min);
//     document.getElementById("result").textContent = value;

// }
// const age = document.getElementById("myinput")
// const button = document.getElementById("mybutton")
// const result = document.getElementById("myp")

// button.onclick = function() {
//     let userAge = Number(age.value);
//     if (userAge < 18) {
//         result.textContent = "You are a minor.";
//     } else if (userAge >= 18 && userAge < 65) {
//         result.textContent = "You are an adult.";
//     } else {
//         result.textContent = "You are a senior citizen.";
//     }
// }

// const subbtn = document.getElementById("subscribebtn");
// const visabtn = document.getElementById("visabtn");
// const masterbtn = document.getElementById("masterbtn");
// const paypalbtn = document.getElementById("paypalbtn");
// const submitbtn = document.getElementById("submitbtn");
// const sub = document.getElementById("message-1");
// const pay = document.getElementById("message-2");

// submitbtn.onclick = function(){
//     if(subbtn.checked){
//         sub.textContent = "You are subscribed the Service!";
//     }else{
//         sub.textContent = "You are not subscribe our Service!";
//     }
//     if(visabtn.checked){
//         pay.textContent = "You have selected Visa Card as your payment method.";
//     }else if(masterbtn.checked){
//         pay.textContent = "You have selected Master Card as your payment method.";
//     }else if(paypalbtn.checked){
//         pay.textContent = "You have selected Paypal as your payment method.";
//     }else{
//         pay.textContent = "You have not selected any payment method.";
//     }

// }
// let marks = 15;
// let grade;

// switch(true){
//     case marks>=90 :
//         grade = "A";
//         break;
//     case marks < 90 && marks >= 80 :
//         grade = "B";
//         break;
//     case marks<80 && marks >=60 :
//         grade = "C";
//         break;
//     case marks<60 && marks >=35 :
//         grade = "S";
//         break;
//     default:
//         grade = "F";
//         break;
// }
// console.log(`Your grade is ${grade}`);
// let name = "Arunalu Prabhatha";
// console.log(name.charAt(3)); // Length of the string
// console.log(name.indexOf("a"))
// console.log(name.lastIndexOf("a"));
// console.log(name.length);
// console.log(name.trim())
// console.log(name.toUpperCase());
// console.log(name.toLowerCase());
// console.log(name.repeat(3))
// console.log(name.startsWith("A_0"))
// console.log(name.endsWith("tha"));
// console.log(name.includes("bha"))
// console.log(name.replaceAll("a","A"))
// console.log(name.padStart(20,"*"))
// console.log(name.padEnd(25,"*"))
// -----String Slicing-----
// const name = "Arunalu Prabhatha"

// console.log(`first Name : ${name.slice(0,name.indexOf(" "))} Last Name : ${name.slice(name.indexOf(" ") + 1)}`);

// -----Method Chaining-----

// let name = window.prompt("Enter your name: ")

// let firstCharacter = name.charAt(0)
// let capitalfirst = firstCharacter.toUpperCase()
// let restOfName = name.slice(1)
// let restname = restOfName.toLowerCase()

// let finalName = capitalfirst + restname

// console.log(`Your name is: ${finalName}`);
//Logical Operaters

// let temp = 1000

// if (temp > 0 && temp <= 30) {
//     console.log(`Good temperature`)
// }else{
//     console.log(`Bad temperature`)

// }
// if (temp < 0 || temp >= 30) {
//     console.log(`Bad temperature`)
// }else{
//     console.log(`Good temperature`)

// }
// let isStudent = true

// if (isStudent){
//     console.log(`Please Login to the system`)
// }else{
//     console.log(`Please Register to the system`)
// }
// let number = 5

// if(number != '5'){
//     console.log("The Number is not 5")
// }else{
//     console.log("The Number is really 5")

// }
// let num = 5

// if(num == '5'){
//     console.log("The Number is  5")
// }else{
//     console.log("The Number is Not 5")

// }

// ===/!== check the type of the value
// ==/!= check the value only not the type 
// let name ="";

// while(name === "") {
//     name = window.prompt("please Enter your name")
// }

// let name ;

// do{
//      name = window.prompt("Please enter your name ")
// }while(name === "" || name === null);

// console.log("Hello " + name);
for(let i = 0 ; i<11; i+=2){
//     if(i === 6) continue;
//     console.log(i)
// }
// let name = window.prompt("What is your name?");
// let age = Number(window.prompt("What is your age?"));

// function greetUser(name, age) {
//   console.log(`Hello ${age}, you are ${name} years old!`);
// }
// greetUser(age , name);

// function checkEmail(email) {
//     return email.includes('@') && email.includes('.');
// }
//  if(checkEmail(window.prompt("Enter your Email : "))){
//     window.alert("Entered Email is a valid one");
//  }else{
//     window.alert("Entered Email is not a valid one");
//  }
let min = 1;
// let max = 100;

// const number = Math.ceil(Math.random()*(max - min) + min)

// let isTrue = false
// let attempts = 0

// while (!isTrue) {
//     let guess  =  window.prompt(`Guess a number between ${min} and ${max}`);
//     guess = Number(guess);
//     attempts++;

//     if (isNaN(guess)) {
//         window.alert("Please enter a valid number.");
        
//     }else if(guess < min || guess > max) {
//         window.alert(`Please enter a number between ${min} and ${max}.`);
//     }else{
//         if (guess === number) {
//             alert("Congratulations! You guessed the number in " + attempts + " attempts!");
//             isTrue = true;
//         } else if (guess < number) {
//             alert("Too low! Try again.");
//         } else {
//             alert("Too high! Try again.");
//         }
//     }
// }
// local scope and the global scope of a variable 
const value = document.getElementById('inputValue');
// const celVal = document.getElementById("cel")
// const fahVal = document.getElementById("fah");
// const convert = document.getElementById("convertButton");
// const result = document.getElementById("result");
// let temp;

// convert.onclick = function() {
//     temp = parseFloat(value.value);
//     if (isNaN(temp)) {
//         result.innerHTML = "Please enter a valid number.";
//         return;
//     }
    
//     if (celVal.checked) {
//         let fahrenheit = (temp * 9/5) + 32;
//         result.textContent = `${temp}째C is equal to ${fahrenheit.toFixed(2)}째F`;
//     } else if (fahVal.checked) {
//         let celsius = (temp - 32) * 5/9;
//         result.textContent = `${temp}째F is equal to ${celsius.toFixed(2)}째C`;
//     } else {
//         result.textContent = "Please select a conversion type.";
//     }
// }
let fruits = ["Apple", "Banana", "Cherry", "Date", "Elderberry"];


// fruits.push("Mango")
// fruits.pop()
// fruits.unshift("Tamarind")
// fruits.shift()
// console.log(fruits.length)
// fruits.sort()
// fruits.sort().reverse()
// console.log(fruits.indexOf("Cherry"))

// console.log(fruits)

// for(let i = 0;i<fruits.length;i++){
//     console.log(fruits[i]);
// }
// //---Enhance LOOP---
// for(let fruit of fruits){
//     console.log(fruit);
// }
// spread operator

//let numbers = [1, 2, 3, 4, 5];

//console.log(Math.max(...numbers)); // Output: 5

// let username = "Arunalu Prabhatha";
// let usernameletters = [...username];
// console.log(usernameletters);
// let newusername = [...username].join("-")
// console.log(newusername)
// let fruits = ["apple", "banana", "cherry"];
// let vegetables = ["carrot", "broccoli", "spinach"];
// let food = [...fruits, ...vegetables,"egg", "cheese"];
// console.log(food);

// rest parameters

// let  food1 = "soya"
// let  food2 = "chili"
// let  food3 = "peanuts"
//  function foods(...foods) {
//     for (let food of foods) {
//         console.log(food);
//     }
//  }
//  foods(food1, food2, food3)

// function average(...numbers) {
//     let sum = 0
//     for(let number of numbers) {
//         sum += number;
//     }
//     return sum / numbers.length;
// }

// console.log(average(10, 20, 30, 40, 50)); // Output: 30
// function combineStr(...strings) {
//     return strings.join(" ");
// }
// console.log(combineStr("Hello" , "I" , "am" , "from" , "Sri Lanka"));
function RandomPasswordGenerator(includeLowercase, includeUppercase, includeNummbers, includeSymbols, length) {
//     let password = ""
//     const lowercase = "abcdefghijklmnopqrstuvwxyz"
//     const uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
//     const numbers = "0123456789"
//     const symbols = "!@#$%^&*()" 

//     let allowedChars = ""
//     allowedChars += includeLowercase ? lowercase : ""
//     allowedChars += includeUppercase ? uppercase : ""
//     allowedChars += includeNummbers ? numbers : ""
//     allowedChars += includeSymbols ? symbols : ""

//     if (length === 0) {    
//         console.log("Password length should be at least 1 character long")
//     }else if(length > 1){
//         for(let i = 0 ;i<length; i++){
//             const randomIndex = Math.floor(Math.random() * allowedChars.length)
//             password += allowedChars.charAt(randomIndex)
        
//         }
//         return password
    
//     }
// }

// const length= 9
// const includeLowercase = true
// const includeUppercase = true
// const includeNummbers = true
// const includeSymbols = true

// console.log(RandomPasswordGenerator(includeLowercase, includeUppercase, includeNummbers, includeSymbols, length))
// let nembers = [1,2,3,4,5]

// function double(element , index , array) {
//     array[index] = element * 2;
// }

// nembers.forEach(double)

// function display(element){
//     console.log(element)
// }
// nembers.forEach(display)

// function sum(callback,a,b){
//     let result = a+b;
//     callback(result)
// }
// function display(value){
//     console.log(value)
// }
// sum(display,5,4)
// function hello(callback){
//     console.log("hello")
//     callback()
// }
// function bye(){
//     console.log("bye")
// }
// hello(bye)
// const numbers = [1,2,3,4,5]


// function square(element) {
//     return Math.pow(element,2)
// }

// const squareNum =numbers.map(square)
// console.log(squareNum)
// const dates = ["2022-04-24","2022-04-25","2022-04-26"]

// function formateDates(day){
//     const parts = day.split("-")
//     return `${parts[1]}/${parts[2]}/${parts[0]}`

// }
// const newArray = dates.map(formateDates)
// console.log(newArray)
// const words = ["spray", "limit", "elite", "exuberant", "destruction", "present"]
// function capitalize(element){
//     return element.charAt(0).toUpperCase() + element.slice(1).toLowerCase()
// }
// const newWords = words.map(capitalize)
// console.log(newWords)

// Filter function

// const numbers = [1,2,3,4,5,6,7,8,9,10]

// function isEven(element){
//     return element % 2 === 0
// }
// const evenNumbers = numbers.filter(isEven)
// console.log(evenNumbers)

// const words = ["sponge", "limit", "elite", "exuberant", "destruction", "present"]

// function isLongerThanFive(element){
//     return element.length > 5
// }
// const longWords = words.filter(isLongerThanFive)
// console.log(longWords)
// Reduce function
// const numbers  = [5,7,3,6,9,1,8,5,4,2]

// function sum(accumulator,element) {
//     return accumulator + element
// }

// const result = numbers.reduce(sum)
// console.log(result)

// function findMax(accumulator,element) {
//     if (element > accumulator) {
//         return element
//     } else {
//         return accumulator
//     }
// }

// const max = numbers.reduce(findMax)
// console.log(max)

//function expression 

// let square = function(element) {
//     return Math.pow(element,2)

// }

// console.log(square(5))

// const numbers = [5,7,3,6,9,1,8,5,4,2]

// const result = numbers.map( function(element) {
//     return Math.pow(element,2)

// })
// console.log(result)

// function expression is use the function as a variable or a value .
// it is use to pass the function as a argument to another function. it is use to return
// setTimeout(function(){
//     console.log("I am the hero")
// },3000)

// const sum = (a,b) =>{ a=a+b;return a+b}


// console.log(sum(1,2))

// const numbers = [1,2,3,4,5]

// const square = numbers.map((element) => Math.pow(element,2))
// const cube = numbers.map((element) => Math.pow(element,3))
// const isEven = numbers.filter((element) => element%2==0)
// const isOdd = numbers.filter((element) => element%2!=0)
// const sum = numbers.reduce((a,b) => a+b)

// console.log(sum)

const person = { 
//     name : `Arunalu Prabhatha`,
//     age : 23,
//     school : `Rajapaksha Central College`,
//     increment : () => console.log(`Incremented age: ${++person.age}`),
// }

// person.increment
// This keyword is does not work in arrow functions because arrow functions does not have its own this keyword.
 it is use the this keyword of its parent
 // this keyword is use in the case where we want to access the properties of the object 
// //inside it

// const person ={
//     name : 'Arunalu Prabhatha',
//     age : 25,
//     isStudent: true,
//     sayName:function(){
//         console.log(`My name is ${this.name}`)
//     }
// }

// person.sayName();

// //we cant use this keyword with the arrow function
// const persondefault ={
//     name : 'Arunalu Prabhatha',
//     age : 25,
//     isStudent: true,
//     sayName:() => console.log(`My name is ${this.name}`)
// } 
// persondefault.sayName();//this part is not work in the code 
// // object constructor
// function Car (make, model, year){
//     this.make = make;
//     this.model =model;
//     this.year =year;
//     this.driveCar = function(){
//         console.log(`Driving a ${this.model}`)
//     }
// }

// const Car1 = new Car(`Toyota`,`Corolla`,2024)

// Car1.driveCar()
// console.log(Car1.make)
//Class in javasctipt

// class Product {
//     constructor(name,price){
//         this.name = name;
//         this.price = price;
//     }//construdtor of the class

//     getPrice(){
//         console.log(`The price of ${this.name} is ${this.price}`)
//     }

//     calculatetotal(tax){
//         return this.price + this.price * tax;
//     }
// }
// const tax = 0.05;
// const product1 = new Product(`Laptop`, 1000);
// product1.getPrice();
// console.log(product1.calculatetotal(tax))
// STATIC keyword

// class MathUtils {
//     static PI = 3.1459

//     static getcCircumeference(radius){
//         return 2 * this.PI * radius;
//     }
    
// }
// const math = new MathUtils()
// console.log(math.PI)//undefined
// console.log(MathUtils.PI) // 3.1459

// console.log(MathUtils.getcCircumeference(10).Math.toFixed(2)) // 62.918
// 
// class User {
//     static userCount =0

//     constructor(name){
//         this.username = name
//         User.userCount += 1; // Increment user count each time a new user is created
//     }
// }
// const user1 = new User(`Arunalu`)
// const user2 = new User(`Arunalu`)
// const user3 = new User(`Arunalu`)

// console.log(User.userCount)
----------------------------------------------------------------------------------------------------------
//Inheritance
class Animal { 
    alive = true;
    eat() {
        console.log(`${this.name} is eating`)
    }

}
class Rabbit extends Animal {
    name = `rabbit`
}
class Fish extends Animal {
    name = `fish`
}
class Hawk extends Animal {
    name = `hawk`
}

const rabbit = new Rabbit();
rabbit.eat();
const fish = new Fish();
fish.eat();
const hawk = new Hawk();
hawk.eat();
----------------------------------------------------------------------------------------------------------
// Super keyword 

// class Animal {
//     constructor(name, age){
//         this.name = name
//         this.age = age
//     }
//     move(speed){
//         console.log(`${this.name} is moving at ${speed}km/h`)
//     }
// }
// class Rabbit extends Animal{
//     constructor(name,age,speed){
//         super(name,age);
//         this.speed = speed
//     }
//     move(){
//         super.move(this.speed);
//     }
// }

// const rabbit = new Rabbit('Bunny', 2, 10);

// rabbit.move();
----------------------------------------------------------------------------------------------------------
// setters make a property writable
// // getters make a property readable

// class User{
//     constructor(name, age){
//         this.name = name;
//         this.age = age;
//     }
//     set name(newName){
//         if(typeof newName === "string" && newName.length > 0){
//             this._name = newName;
//         }else{
//             console.error("Invalid name");
//         }
//     }
//     set age(newAge){
//         if(typeof newAge === "number" && newAge> 0){
//             this._Age = newAge;
//         }else{
//             console.error("the person is not born yet");
//         }
//     }
//     get name(){
//         return this._name;
//     }
//     get age(){
//         return this._Age + 5;// we can set the value like this and can set the values that are not taking as a parameter of the constructor
//     }
// }
// //
// const user1 = new User("John", 30);

// console.log(user1.name);
// console.log(user1.age);
// ----------------------------------------------------------------------------------------------------------
// // distructure

//  let a = 5;
//  let b = 3;

//  [a, b] = [b, a];

//  console.log(a, b); // Output: 3 5

//  //array distructuring

//  const fruits = ['apple', 'banana', 'cherry','orange','mango'];

//  [fruits[0],fruits[1]] = [fruits[1], fruits[0]];

//  console.log(fruits)

//  const [first, second, ...rest]  = fruits;

//  console.log(first)
//  console.log(second)
//  console.log(rest)

//object destructure
// const person = {
//     name : `Arunalu`,
//     age : 23,
//     city : `sooriyawewa`,
//     job : `developer`
// }

// // const {name , age , city = `default city`} = person;
// // console.log(name)
// // console.log(city)

// // const {name , age , ...rest } = person

// function display({name, age , city = `default city`,job , married = false}) {
//     console.log(name)
//     console.log( age);
//     console.log( city);
//     console.log( job);
//     console.log( married);
// }

// display(person)
// ----------------------------------------------------------------------------------------------------------
//push
//pop 
//slice
//splice
//forEach
//map


// person = {
//     name : `Arunalu`,
//     age : 23,
//     address : {
//         street: `No 1, Main Street`,
//         city: `Sooriyawewa`,
//         country:`Sri Lanka`
//     }
// }

// for (property in person.address){
//     console.log(person.address[property])

// }

// class Person {
//     constructor(name, age , ...address){
//         this.name  = name;
//         this.age = age;
//         this.address = new Address(...address);
//     }
// }

// class Address {
//     constructor(street, city, country) {
//         this.street = street;
//         this.city = city;
//         this.country =country;
//     }
// }

// const person = new Person(`Arunalu`, 23, `No 1, Main Street`, `Sooriyawewa`, `Sri Lanka`);
// console.log(person)

// console.log(person.address.country)
// const fruits = [{name : `Apple`, color : `red`, price : 100},
//     {name : `Banana`, color : `yellow`, price : 75},
//     {name : `Mango`, color : `green`, price : 90},
//     {name : `pineapple`, color : `yellow`, price : 250},
//     {name : `jackfruit`, color : `green`, price : 400},
// ]

//fruits.push({name : `Orange`, color : `orange`, price : 120});
//ruits.pop()
//fruits.splice(2,1)//first parameter is the index secont parameter is the nunber of items that we will remove
//fruits.forEach(fruit => console.log(fruit.name))
//const fruitNames = fruits.map(fruit => fruit.name)
// const yellowFruits = fruits.filter(function(fruit){
//     return fruit.color === `yellow`? fruit.name : null
// })
// const maxPrice = fruits.reduce((max , fruit) => max.price > fruit.price ? max : fruit)
// console.log(maxPrice.name)
//-----------------------------------------------------------------------------------------------------------
// sort in the javascript

// const numbers= [10 , 1 ,65, 5,8,8,100]

// numbers.sort((a,b) => a-b)

// console.log(numbers)

// const fruits = [{name : `Apple`, color : `red`, price : 100},
//     {name : `Banana`, color : `yellow`, price : 75},
//     {name : `Mango`, color : `green`, price : 90},
//     {name : `pineapple`, color : `yellow`, price : 250},
//     {name : `jackfruit`, color : `green`, price : 400},
// ]

// fruits.sort((a,b) => a.price - b.price)

// console.log(fruits)


// fruits.sort((a,b) => a.color.localeCompare(b.color))//

// console.log(fruits)
//----------------------------------------------------------------------------------------------------------------------
//const date = new Date(2025,0,1,1,2,3)
//const date = new Date("2025-01-05T12:00:00Z")
// const date = new Date(1755400000000)

// console.log(date)
// const year = date.getFullYear()
// const month = date.getMonth()
// const day  = date.getDate()
// const hours = date.getHours()
// const minutes = date.getMinutes()
// const seconds = date.getSeconds()
// const dawasa = date.getDay()

// console.log(year)
// console.log(month)
// console.log(day)
// console.log(hours)
// console.log(minutes)
// console.log(seconds)
// console.log(dawasa)

// const date = new Date()

// date.setFullYear(1)
// date.setMonth(0)
// date.setDate(1)
// date.setHours(5)
// date.setMinutes(5)
// date.setSeconds(5)
// console.log(date)
// const date1 = new Date("2025-10-5")
// const date2 = new Date("2025-10-6")

// if (date1 < date2){
//     console.log("Happy New Year")
// }-------------------------------------------------------------------------------------------------------
//closure in javasctipt use in state management and prinate variables
// we cannot change the value in globally but we can change the values lacally and get the values by 
// returning objects
// function createCounter(){
//     let count = 0

//     function increase() {
//         count++;
//         console.log(`The count is ${count}`)
//     }

//     return {increase}
// }
// let count =500
// const counter  =  createCounter()

// counter.increase()

// counter.increase()
//----------------------------------------------------------------------------------------------------------
//set timeout function with clear timeout function
// let timeoutID;
// document.getElementById("set").onclick = function(){
//    timeoutID = setTimeout(() => window.alert("Hello WORLD"),3000)
//    console.log("Timeout set for 3 seconds")
// }


// document.getElementById("clear").onclick = function(){
//    clearTimeout(timeoutID)
//    console.log("Timeout cleared")
// }
//---------------------------------------------------------------------------------------------------------
//practical
// Digital Clock

// function UpdateClock(){
//     const time = new Date();
//     let hours = time.getHours().toString().padStart(2,'0')
//     const state = hours >= 12 ? 'PM' : 'AM';
//     hours = hours % 12 || 12;
//     const minutes = time.getMinutes().toString().padStart(2,'0')
//     const seconds = time.getSeconds().toString().padStart(2,'0')
//     const timestring = `${hours}:${minutes}:${seconds} ${state}`;
//     document.getElementById("clock").textContent = timestring
// }

// setInterval(UpdateClock,1000)
//--------------------------------------------------------------------------------------------------------------
const display = document.getElementById("stopwatch")
// const startbtn = document.getElementById("start")
// const stopbtn = document.getElementById("stop")
// const resetbtn = document.getElementById("reset")

// let timer = null;
// let runtime = 0;
// let startTime = 0;
// let isrunning = false;

// startbtn.onclick =  function(){
//     if(!isrunning){
//         startTime = Date.now() - runtime;
//         timer  = setInterval(updateTime,10)
//         isrunning = true;
//     }
// }

// stopbtn.onclick = function(){
//     if(isrunning){
//         clearInterval(timer);
//         isrunning = false;
//     }
// }
// resetbtn.onclick = function(){
//     if(isrunning){
//         clearInterval(timer);
//         isrunning = false;
//     }
//     runtime = 0;
//     display.textContent = "00:00:00:00";}

// function updateTime(){
//     runtime = Date.now() - startTime;
//     const hours  = Math.floor(runtime/ (1000*60*60)).toString().padStart(2, '0');
//     const minutes  = Math.floor(runtime/ (1000*60) % 60).toString().padStart(2, '0');
//     const seconds  = Math.floor(runtime/ (1000) % 60).toString().padStart(2, '0');
//     const miliseconds  = Math.floor(runtime/ (10) % 100).toString().padStart(2, '0');

//    display.textContent = `${hours}:${minutes}:${seconds}:${miliseconds}`;
// }
//--------------------------------------------------------------------------------------------------------------
mathUtil.js file 
// 
export const PI = 3.1459

// export function add(a,b){
//     return a + b;
// }
// export function sub(a,b){
//     return a - b;
// }
// export function mul(a,b){
//     return a * b;
// }
// export function div(a,b){
//     return a/b;
// }

index.js file

// ES6 module 

// import {PI , add , sub , mul , div } from './mathUtil.js'

// console.log(PI);
// console.log(add(2,3))
// console.log(sub(5,2))
// console.log(mul(2,3))
// console.log(Math.floor(div(10,6)))
//----------------------------------------------------------------------------------------------------------
// try catch block 

// try{
//     const devident = window.prompt(`Enter a Number : `)
//     const devider = window.prompt(`Enter a Number : `)

//     if(devider == 0){
//         throw new Error("Devider cannot be zero")
//     }
//     if(isNaN(devident) || isNaN(devider)){
//         throw new Error("Invalid Input")
//     }
// }catch(error){
    
//         console.log(error.message)
    
// }finally{
//     console.log("This part is using in file closing and the other stuff")
// }
//------------------------------------------------------------------------------------------------------------// Element Selectors

// document.getElementById  ELEMENT OR NULL
// document.getElementByClassName  HTML COLLECTION
// document.getElementsByTagName  HTML COLLECTION
// document.querySelector  FIRSTELEMENT OR NULL
// document.querySelectorAll  NODELIST

// const first = document.getElementById('first');
// console.log(first);
// first.style.fontFamily = 'Arial';
// first.style.fontSize = '20px';
// first.style.fontWeight = 'bold';
// first.style.marginBottom = '10px';
// first.textContent = `THIS my first javascript Course`

//const fruits = document.getElementsByClassName(`fruits`)

//fruits[0].style.backgroundColor = 'lightgreen'; 

// for(let fruit of fruits){
//     fruit.style.backgroundColor = 'lightgreen';
// }
//fruits.forEach(fruit => {fruit.style.backgroundColor = 'lightgreen';}) // this will not change the background color because 
//HTML collections does not have forEach method
//Array.from(fruits).forEach(fruit => {fruit.style.backgroundColor = 'lightgreen';})
// const lis = document.getElementsByTagName('li');
//console.log(lis);
//Array.from(lis).forEach(li => {li.style.color = 'blue';})

// const fruit = document.querySelector('.fruits')

// fruit.style.backgroundColor = 'lightgreen';
// const vegetable = document.querySelector('li')
// vegetable.style.backgroundColor = 'lightgreen';
// const fruits = document.querySelectorAll('.fruits');
// const vegetables = document.querySelectorAll('li');

// console.log(fruits);
// vegetables.forEach(vegetable => vegetable.style.backgroundColor = 'blue');

// fruits.forEach(fruit => fruit.style.backgroundColor = 'lightgreen');
\\-----------------------------------------------------------------------------------------------------------------------------------
// const vegetables = document.getElementById('vegetables')
// const firstveg = vegetables.firstElementChild
// firstveg.style.backgroundColor = 'green'
// const allVegs = vegetables.children
// console.log(allVegs)
// Array.from(allVegs).forEach(veg => {
//     veg.style.backgroundColor = 'lightgreen';
// });
// const carrot = document.getElementById('carrot')
// const potato = carrot.nextElementSibling
// potato.style.backgroundColor = 'lightgreen'
// const beetroot = potato.nextElementSibling
// beetroot.style.backgroundColor = 'lightgreen'
// const car = potato.previousElementSibling
// car.style.backgroundColor = 'lightgreen'
//.prevElementSibling
//.nextElementSibling
//.parentElement
// carrot.parentElement.style.backgroundColor = 'lightgreen';
//---------------------------------------------------------------------------------------------------------------------------------
// const arunalu  = document.createElement('h1')

// arunalu.textContent = 'Hello, I am a new element!';
// arunalu.id = 'arunaluElement'
// arunalu.style.fontFamily = 'Arial, sans-serif';


//document.getElementById('box1').appendChild(arunalu)
//document.getElementById('box1').prepend(arunalu)

// const box1 = document.getElementById('box3')

// document.body.insertBefore(arunalu, box1)
//----------------------------------------------------------------------------------------------------------------------------------
//These are the mouse Events in here also we can change another element by clicking on a different element

// const myBox = document.getElementById("myBox")
// let clicked = false;
// function addChanges(event){
//     clicked = true;
//     event.target.style.backgroundColor = "yellow"
//     event.target.style.color = "black"
//     event.target.textContent = "Clicked!"
//     event.target.style.fontSize= "1.25rem"
// }
// myBox.addEventListener("click", addChanges)
// function moChanges(event){
//     if(!clicked){
//     event.target.style.backgroundColor = "tomato"
//     event.target.style.color = "white"
//     event.target.textContent = "Don't Touch Me!"
//     event.target.style.fontSize= "1.25rem"
//     }
// }
// myBox.addEventListener("mouseover",moChanges)
// function mouChanges(event){
//     if(!clicked){
//     event.target.style.backgroundColor = "darkseagreen"
//     event.target.style.color = "black"
//     event.target.textContent = "Click Me"
//     event.target.style.fontSize= "2.5rem"
//     }
// }
//----------------------------------------------------------------------------------------------------------------------------------